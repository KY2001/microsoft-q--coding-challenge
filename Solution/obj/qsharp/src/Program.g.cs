//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Solution\",\"Name\":\"HelloQ\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":11,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/ky2001/q#/Solution/Program.qs\",\"Position\":{\"Item1\":12,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Solution\",\"Name\":\"HelloQ\"},\"Attributes\":[],\"SourceFile\":\"/home/ky2001/q#/Solution/Program.qs\",\"Position\":{\"Item1\":12,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Solution\",\"Name\":\"MinusXZ\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/ky2001/q#/Solution/Program.qs\",\"Position\":{\"Item1\":31,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"target\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":19},\"Item2\":{\"Line\":1,\"Column\":25}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Qubit\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Solution\",\"Name\":\"MinusXZ\"},\"Attributes\":[],\"SourceFile\":\"/home/ky2001/q#/Solution/Program.qs\",\"Position\":{\"Item1\":31,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":18}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Solution\",\"Name\":\"MinusXZ\"},\"Attributes\":[],\"SourceFile\":\"/home/ky2001/q#/Solution/Program.qs\",\"Position\":{\"Item1\":31,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":44},\"Item2\":{\"Line\":1,\"Column\":53}},\"Documentation\":[\"automatically generated QsAdjoint specialization for Solution.MinusXZ\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlled\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Solution\",\"Name\":\"MinusXZ\"},\"Attributes\":[],\"SourceFile\":\"/home/ky2001/q#/Solution/Program.qs\",\"Position\":{\"Item1\":31,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":44},\"Item2\":{\"Line\":1,\"Column\":53}},\"Documentation\":[\"automatically generated QsControlled specialization for Solution.MinusXZ\"]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsControlledAdjoint\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Solution\",\"Name\":\"MinusXZ\"},\"Attributes\":[],\"SourceFile\":\"/home/ky2001/q#/Solution/Program.qs\",\"Position\":{\"Item1\":31,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":44},\"Item2\":{\"Line\":1,\"Column\":53}},\"Documentation\":[\"automatically generated QsControlledAdjoint specialization for Solution.MinusXZ\"]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Solution\",\"Name\":\"Solve\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/home/ky2001/q#/Solution/Program.qs\",\"Position\":{\"Item1\":41,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"unitary\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"Qubit\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":18},\"Item2\":{\"Line\":1,\"Column\":25}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"Qubit\"},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"Union\",\"Fields\":[{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Adjointable\"}]},{\"Case\":\"SimpleSet\",\"Fields\":[{\"Case\":\"Controllable\"}]}]},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Solution\",\"Name\":\"Solve\"},\"Attributes\":[],\"SourceFile\":\"/home/ky2001/q#/Solution/Program.qs\",\"Position\":{\"Item1\":41,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"Documentation\":[]}")]
#line hidden
namespace Solution
{
    [SourceLocation("/home/ky2001/q#/Solution/Program.qs", OperationFunctor.Body, 13, 32)]
    public partial class HelloQ : Operation<QVoid, QVoid>, ICallable
    {
        public HelloQ(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "HelloQ";
        String ICallable.FullName => "Solution.HelloQ";
        public static EntryPointInfo<QVoid, QVoid> Info => new EntryPointInfo<QVoid, QVoid>(typeof(HelloQ));
        protected ICallable<IUnitary, Int64> Solve__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MinusXZ__
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line 14 "/home/ky2001/q#/Solution/Program.qs"
            var res = Solve__.Apply(MinusXZ__);
#line 15 "/home/ky2001/q#/Solution/Program.qs"
            Message__.Apply(String.Format("res: {0}", res));
#line 16 "/home/ky2001/q#/Solution/Program.qs"
            Message__.Apply("Hello quantum world!");
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Solve__ = this.__Factory__.Get<ICallable<IUnitary, Int64>>(typeof(Solve));
            this.MinusXZ__ = this.__Factory__.Get<IUnitary<Qubit>>(typeof(MinusXZ));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<HelloQ, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("/home/ky2001/q#/Solution/Program.qs", OperationFunctor.Body, 32, 42)]
    [SourceLocation("/home/ky2001/q#/Solution/Program.qs", OperationFunctor.Adjoint, 32, 42)]
    [SourceLocation("/home/ky2001/q#/Solution/Program.qs", OperationFunctor.Controlled, 32, 42)]
    [SourceLocation("/home/ky2001/q#/Solution/Program.qs", OperationFunctor.ControlledAdjoint, 32, 42)]
    public partial class MinusXZ : Unitary<Qubit>, ICallable
    {
        public MinusXZ(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "MinusXZ";
        String ICallable.FullName => "Solution.MinusXZ";
        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__Z
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected ICallable<(Double,Double), Microsoft.Quantum.Math.Complex> Microsoft__Quantum__Math__Complex
        {
            get;
            set;
        }

        protected IUnitary<(IQArray<IQArray<Microsoft.Quantum.Math.Complex>>,Microsoft.Quantum.Arithmetic.LittleEndian)> Microsoft__Quantum__Synthesis__ApplyUnitary
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, Microsoft.Quantum.Arithmetic.LittleEndian> Microsoft__Quantum__Arithmetic__LittleEndian
        {
            get;
            set;
        }

        public override Func<Qubit, QVoid> __Body__ => (__in__) =>
        {
            var target = __in__;
#line 33 "/home/ky2001/q#/Solution/Program.qs"
            Microsoft__Quantum__Intrinsic__Z.Apply(target);
#line 34 "/home/ky2001/q#/Solution/Program.qs"
            Microsoft__Quantum__Intrinsic__X.Apply(target);
#line 35 "/home/ky2001/q#/Solution/Program.qs"
            var matrix = (IQArray<IQArray<Microsoft.Quantum.Math.Complex>>)new QArray<IQArray<Microsoft.Quantum.Math.Complex>>(new QArray<Microsoft.Quantum.Math.Complex>(new Microsoft.Quantum.Math.Complex((-(1D), 0D)), new Microsoft.Quantum.Math.Complex((0D, 0D))), new QArray<Microsoft.Quantum.Math.Complex>(new Microsoft.Quantum.Math.Complex((0D, 0D)), new Microsoft.Quantum.Math.Complex((-(1D), 0D))));
#line 39 "/home/ky2001/q#/Solution/Program.qs"
            Microsoft__Quantum__Synthesis__ApplyUnitary.Apply((matrix, new Microsoft.Quantum.Arithmetic.LittleEndian(new QArray<Qubit>(target))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<Qubit, QVoid> __AdjointBody__ => (__in__) =>
        {
            var target = __in__;
#line 32 "/home/ky2001/q#/Solution/Program.qs"
            var __qsVar0__matrix__ = (IQArray<IQArray<Microsoft.Quantum.Math.Complex>>)new QArray<IQArray<Microsoft.Quantum.Math.Complex>>(new QArray<Microsoft.Quantum.Math.Complex>(new Microsoft.Quantum.Math.Complex((-(1D), 0D)), new Microsoft.Quantum.Math.Complex((0D, 0D))), new QArray<Microsoft.Quantum.Math.Complex>(new Microsoft.Quantum.Math.Complex((0D, 0D)), new Microsoft.Quantum.Math.Complex((-(1D), 0D))));
#line 32 "/home/ky2001/q#/Solution/Program.qs"
            Microsoft__Quantum__Synthesis__ApplyUnitary.Adjoint.Apply((__qsVar0__matrix__, new Microsoft.Quantum.Arithmetic.LittleEndian(new QArray<Qubit>(target))));
#line 32 "/home/ky2001/q#/Solution/Program.qs"
            Microsoft__Quantum__Intrinsic__X.Adjoint.Apply(target);
#line 32 "/home/ky2001/q#/Solution/Program.qs"
            Microsoft__Quantum__Intrinsic__Z.Adjoint.Apply(target);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,Qubit), QVoid> __ControlledBody__ => (__in__) =>
        {
            var (__controlQubits__,target) = __in__;
#line 32 "/home/ky2001/q#/Solution/Program.qs"
            Microsoft__Quantum__Intrinsic__Z.Controlled.Apply((__controlQubits__, target));
#line 32 "/home/ky2001/q#/Solution/Program.qs"
            Microsoft__Quantum__Intrinsic__X.Controlled.Apply((__controlQubits__, target));
#line 32 "/home/ky2001/q#/Solution/Program.qs"
            var matrix = (IQArray<IQArray<Microsoft.Quantum.Math.Complex>>)new QArray<IQArray<Microsoft.Quantum.Math.Complex>>(new QArray<Microsoft.Quantum.Math.Complex>(new Microsoft.Quantum.Math.Complex((-(1D), 0D)), new Microsoft.Quantum.Math.Complex((0D, 0D))), new QArray<Microsoft.Quantum.Math.Complex>(new Microsoft.Quantum.Math.Complex((0D, 0D)), new Microsoft.Quantum.Math.Complex((-(1D), 0D))));
#line 32 "/home/ky2001/q#/Solution/Program.qs"
            Microsoft__Quantum__Synthesis__ApplyUnitary.Controlled.Apply((__controlQubits__, (matrix, new Microsoft.Quantum.Arithmetic.LittleEndian(new QArray<Qubit>(target)))));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override Func<(IQArray<Qubit>,Qubit), QVoid> __ControlledAdjointBody__ => (__in__) =>
        {
            var (__controlQubits__,target) = __in__;
#line 32 "/home/ky2001/q#/Solution/Program.qs"
            var __qsVar0__matrix__ = (IQArray<IQArray<Microsoft.Quantum.Math.Complex>>)new QArray<IQArray<Microsoft.Quantum.Math.Complex>>(new QArray<Microsoft.Quantum.Math.Complex>(new Microsoft.Quantum.Math.Complex((-(1D), 0D)), new Microsoft.Quantum.Math.Complex((0D, 0D))), new QArray<Microsoft.Quantum.Math.Complex>(new Microsoft.Quantum.Math.Complex((0D, 0D)), new Microsoft.Quantum.Math.Complex((-(1D), 0D))));
#line 32 "/home/ky2001/q#/Solution/Program.qs"
            Microsoft__Quantum__Synthesis__ApplyUnitary.Adjoint.Controlled.Apply((__controlQubits__, (__qsVar0__matrix__, new Microsoft.Quantum.Arithmetic.LittleEndian(new QArray<Qubit>(target)))));
#line 32 "/home/ky2001/q#/Solution/Program.qs"
            Microsoft__Quantum__Intrinsic__X.Adjoint.Controlled.Apply((__controlQubits__, target));
#line 32 "/home/ky2001/q#/Solution/Program.qs"
            Microsoft__Quantum__Intrinsic__Z.Adjoint.Controlled.Apply((__controlQubits__, target));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Intrinsic__Z = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.Z));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Math__Complex = this.__Factory__.Get<ICallable<(Double,Double), Microsoft.Quantum.Math.Complex>>(typeof(global::Microsoft.Quantum.Math.Complex));
            this.Microsoft__Quantum__Synthesis__ApplyUnitary = this.__Factory__.Get<IUnitary<(IQArray<IQArray<Microsoft.Quantum.Math.Complex>>,Microsoft.Quantum.Arithmetic.LittleEndian)>>(typeof(global::Microsoft.Quantum.Synthesis.ApplyUnitary));
            this.Microsoft__Quantum__Arithmetic__LittleEndian = this.__Factory__.Get<ICallable<IQArray<Qubit>, Microsoft.Quantum.Arithmetic.LittleEndian>>(typeof(global::Microsoft.Quantum.Arithmetic.LittleEndian));
        }

        public override IApplyData __DataIn__(Qubit data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit target)
        {
            return __m__.Run<MinusXZ, Qubit, QVoid>(target);
        }
    }

    [SourceLocation("/home/ky2001/q#/Solution/Program.qs", OperationFunctor.Body, 42, -1)]
    public partial class Solve : Operation<IUnitary, Int64>, ICallable
    {
        public Solve(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Solve";
        String ICallable.FullName => "Solution.Solve";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__Y
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__Z
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Diagnostics__DumpMachine
        {
            get;
            set;
        }

        public override Func<IUnitary, Int64> __Body__ => (__in__) =>
        {
            var unitary = __in__;
#line 43 "/home/ky2001/q#/Solution/Program.qs"
            var answer = 0L;
#line hidden
            {
#line 44 "/home/ky2001/q#/Solution/Program.qs"
                var qs = Allocate__.Apply(2L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 45 "/home/ky2001/q#/Solution/Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(qs[0L]);
#line 46 "/home/ky2001/q#/Solution/Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Controlled.Apply((new QArray<Qubit>(qs[0L]), qs[1L]));
#line 47 "/home/ky2001/q#/Solution/Program.qs"
                    unitary.Controlled.Apply((new QArray<Qubit>(qs[0L]), qs[1L]));
#line 48 "/home/ky2001/q#/Solution/Program.qs"
                    unitary.Controlled.Apply((new QArray<Qubit>(qs[0L]), qs[1L]));
#line 49 "/home/ky2001/q#/Solution/Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Controlled.Apply((new QArray<Qubit>(qs[0L]), qs[1L]));
#line 50 "/home/ky2001/q#/Solution/Program.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(qs[0L]);
#line 52 "/home/ky2001/q#/Solution/Program.qs"
                    if ((Microsoft__Quantum__Intrinsic__M.Apply(qs[0L]) == Result.Zero))
                    {
#line 54 "/home/ky2001/q#/Solution/Program.qs"
                        Microsoft__Quantum__Intrinsic__H.Apply(qs[0L]);
#line 55 "/home/ky2001/q#/Solution/Program.qs"
                        unitary.Controlled.Apply((new QArray<Qubit>(qs[0L]), qs[1L]));
#line 56 "/home/ky2001/q#/Solution/Program.qs"
                        Microsoft__Quantum__Intrinsic__Y.Controlled.Apply((new QArray<Qubit>(qs[0L]), qs[1L]));
#line 57 "/home/ky2001/q#/Solution/Program.qs"
                        Microsoft__Quantum__Intrinsic__H.Apply(qs[0L]);
#line 58 "/home/ky2001/q#/Solution/Program.qs"
                        if ((Microsoft__Quantum__Intrinsic__M.Apply(qs[0L]) == Result.Zero))
                        {
#line 60 "/home/ky2001/q#/Solution/Program.qs"
                            answer = 0L;
                        }
                        else
                        {
#line 63 "/home/ky2001/q#/Solution/Program.qs"
                            answer = 2L;
#line 64 "/home/ky2001/q#/Solution/Program.qs"
                            Microsoft__Quantum__Intrinsic__X.Apply(qs[0L]);
                        }
                    }
                    else
                    {
#line 67 "/home/ky2001/q#/Solution/Program.qs"
                        Microsoft__Quantum__Intrinsic__X.Apply(qs[0L]);
#line 69 "/home/ky2001/q#/Solution/Program.qs"
                        Microsoft__Quantum__Intrinsic__H.Apply(qs[0L]);
#line 70 "/home/ky2001/q#/Solution/Program.qs"
                        unitary.Controlled.Apply((new QArray<Qubit>(qs[0L]), qs[1L]));
#line 71 "/home/ky2001/q#/Solution/Program.qs"
                        Microsoft__Quantum__Intrinsic__Z.Controlled.Apply((new QArray<Qubit>(qs[0L]), qs[1L]));
#line 72 "/home/ky2001/q#/Solution/Program.qs"
                        Microsoft__Quantum__Intrinsic__X.Controlled.Apply((new QArray<Qubit>(qs[0L]), qs[1L]));
#line 73 "/home/ky2001/q#/Solution/Program.qs"
                        Microsoft__Quantum__Intrinsic__H.Apply(qs[0L]);
#line 74 "/home/ky2001/q#/Solution/Program.qs"
                        Microsoft__Quantum__Diagnostics__DumpMachine.Apply(QVoid.Instance);
#line 75 "/home/ky2001/q#/Solution/Program.qs"
                        if ((Microsoft__Quantum__Intrinsic__M.Apply(qs[0L]) == Result.Zero))
                        {
#line 77 "/home/ky2001/q#/Solution/Program.qs"
                            answer = 1L;
                        }
                        else
                        {
#line 80 "/home/ky2001/q#/Solution/Program.qs"
                            answer = 3L;
#line 81 "/home/ky2001/q#/Solution/Program.qs"
                            Microsoft__Quantum__Intrinsic__X.Apply(qs[0L]);
                        }
                    }
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(qs);
                    }
                }
            }

#line 85 "/home/ky2001/q#/Solution/Program.qs"
            return answer;
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
            this.Microsoft__Quantum__Intrinsic__Y = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.Y));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Intrinsic__Z = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.Z));
            this.Microsoft__Quantum__Diagnostics__DumpMachine = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Diagnostics.DumpMachine<>));
        }

        public override IApplyData __DataIn__(IUnitary data) => new QTuple<IUnitary>(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, IUnitary unitary)
        {
            return __m__.Run<Solve, IUnitary, Int64>(unitary);
        }
    }
}